-- TRIGGERS
CREATE OR REPLACE TRIGGER INS_REG
AFTER INSERT ON REGIONS
BEGIN
  INSERT INTO LOG_TABLE VALUES('INSERCION EN LA TABLA REGIONS',USER);
END;

--Ejemplo2
create or replace TRIGGER TR1_REGION 
BEFORE INSERT OR UPDATE OR DELETE
ON REGIONS 
FOR EACH ROW
WHEN (NEW.REGION_ID > 1000)
BEGIN

  IF INSERTING THEN 
    :NEW.REGION_NAME:=UPPER(:NEW.REGION_NAME);
    INSERT INTO LOG_TABLE VALUES('INSERT',USER);
  END IF;
  IF UPDATING('REGION_NAME') THEN
    :NEW.REGION_NAME:=UPPER(:NEW.REGION_NAME);
    INSERT INTO LOG_TABLE VALUES('UPDATE DE REGION_NAME',USER);
  END IF;
  IF UPDATING('REGION_ID') THEN
    INSERT INTO LOG_TABLE VALUES('UPDATE DE REGIN_ID',USER);
  END IF;
  IF DELETING THEN
   INSERT INTO LOG_TABLE VALUES('DELETE',USER);
  END IF;

  /*IF USER <> 'HR' THEN
    RAISE_APPLICATION_ERROR(-20000,'SOLO HR PUEDE MANIPULAR LA TABLA REGIONS');
  END IF;
  */
END;


DROP TRIGGER INS_REG;

INSERT INTO REGIONS VALUES(1004,'TEST_REGIONS3');
COMMIT;

UPDATE REGIONS SET REGION_NAME='AMSTERDAM02' WHERE REGION_ID=1004;
COMMIT;

UPDATE REGIONS SET REGION_NAME=LOWER(REGION_NAME);
COMMIT;

UPDATE REGIONS SET REGION_NAME=UPPER(REGION_NAME);
COMMIT;

UPDATE REGIONS SET REGION_NAME='Amsterdam03' WHERE REGION_ID=1004;
COMMIT;

INSERT INTO REGIONS VALUES(1085,'REGIONS85');
COMMIT;

desc user_triggers;
SELECT * FROM user_triggers;

SELECT OBJECT_NAME,OBJECT_TYPE, STATUS
FROM USER_OBJECTS
WHERE OBJECT_TYPE='TRIGGER';

SELECT * FROM USER_ERRORS;

ALTER TRIGGER TR1_REGION COMPILE;

ALTER TRIGGER TR1_REGION DISABLE;







